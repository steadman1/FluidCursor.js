import { Vector1, Vector2 } from "./Vectors";
import IntersectionType from "./IntersectionType";
import TargetComponent from "./TargetComponent";
declare class CursorComponent {
    HTML: HTMLElement;
    position: Vector2;
    followDelay: number;
    rotationPhysics: boolean;
    rotation: Vector1;
    rotationDelay: number;
    rotationMagnitude: number;
    rotationMax: number;
    intersections: Array<TargetComponent>;
    hasIntersectClass: string;
    withoutIntersectClass: string;
    morphTarget: boolean;
    morphTargetDelay: number;
    morphTargetPadding: number;
    magneticTarget: boolean;
    magneticTargetDelay: number;
    constructor({ HTML, followDelay, rotationPhysics, rotationDelay, rotationMagnitude, rotationMax, hasIntersectClass, withoutIntersectClass, morphTarget, morphTargetDelay, morphTargetPadding, magneticTarget, magneticTargetDelay, }: {
        HTML: HTMLElement;
        followDelay: string | null;
        rotationPhysics: string | null;
        rotationDelay: string | null;
        rotationMagnitude: string | null;
        rotationMax: string | null;
        hasIntersectClass: string | null;
        withoutIntersectClass: string | null;
        morphTarget: string | null;
        morphTargetDelay: string | null;
        morphTargetPadding: string | null;
        magneticTarget: string | null;
        magneticTargetDelay: string | null;
    });
    hasIntersection(): boolean;
    morphTo(target: TargetComponent): void;
    cancelMorph(): void;
    magneticTo(target: TargetComponent): void;
    intersection(type: IntersectionType, target: TargetComponent): void;
    setHTML(): void;
}
export default CursorComponent;
